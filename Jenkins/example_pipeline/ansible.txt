для рабочей интеграции с ansible необходим одноименныей плагин в дженкинсе

так же на слейве должен быть установлен git ansible

// как включить скрип в pipeline
// настройки job / секция Pipeline
//                   - definition: Pipeline script from SCM
//                   - SCM: Git
//                      - Repositories
//                          - Reposiyory URL: https://github.com/j1nn33/study.git
//                      - Branches to build
//                          - Branch Specifier (blank for 'any'): */master
//                      - Script Path: Jenkins/jenkins_structure/jenkins/jenkins_job.groovie       
//
//    вызвать можно одним из способов

pipeline {
    agent any
    options {
        ansiColor("xterm")
        buildDiscarder logRotator(
            numToKeepStr: '3'
        ) 
    }
    stages {
        
        stage('Checkout') { // добавим новый Stage
            steps {
                git branch: 'master', url: "https://github.com/j1nn33/study.git" 
            }
        }
        stage('ROLE_1') {
            steps {
                //ansiblePlaybook colorized: true, disableHostKeyChecking: true, credentialsId: 'ssh_cred_for_host', installation: 'ansible-master', inventory: './ROLES/ansible/inventory_monitoring/dev/hosts.ini', playbook: './ROLES/ansible/playbooks_monitoring/prometheus_role.yaml'
                ansiblePlaybook colorized: true, disableHostKeyChecking: true, installation: 'ansible-master', inventory: './Jenkins/jenkins_structure/hosts.ini', playbook: './Jenkins/jenkins_structure/playbooks/role_1.yml'
                
            }
        }
                     
        stage('ROLE_2') {
            steps {
                dir('Jenkins/jenkins_structure'){
                   sh 'ansible-playbook playbooks/role_2.yml -i hosts.ini'
                }    
            }
        }    
        
        stage('TASK_1') {
            steps {
                sh 'ansible-playbook ./Jenkins/jenkins_structure/playbooks/task_1.yml -i hosts.ini' // поскольку скрипты работают в одной папке, на втором шаге мы можем просто запустить плейбук
            }
        }


        stage('test_for groovie'){
            steps {
                script {
                   dir('Jenkins/jenkins_structure'){
                        sh 'echo "test_from_jenkins_pipeline_stage precheck"'
                        sh 'pwd'
                        sh 'ls -a'
                        //sh 'ansible-playbook Jenkins/jenkins_structure/playbooks/task_2.yml -i hosts.ini'
                        ansiblePlaybook(
                            playbook: "playbooks/precheck.yml",
                            //extraVars: []
                            disableHostKeyChecking: true,
                            inventory: "hosts.ini",
                            colorized: true,
                        )                            
                    }
                }
            }
        }
    }
}


